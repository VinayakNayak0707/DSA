package practi;

public class QueueCirAr {
	static class Queue{
		static int arr[];
		static int size;
		static int rear = -1;
		static int front = -1;
		Queue(int size){
			this.size=size;
			 arr= new int[size];
			}
		
		public boolean isEmpty() {
			return rear ==-1&& front ==-1;
		}
		
		public boolean isFull() {
			return rear == front-1;
		}
		
		public void add(int data) {
			if(isFull()) {
				System.out.println("queue is full");
				return;
			}
			if(front==-1) {
				front=0;
			}
			rear =(rear+1)%size;
			arr[rear]=data;
			System.out.println("added item:"+arr[rear]);
		}
		
		public int remove() {
			if(isEmpty()) {
				System.out.println("queue is emprty");
				return -1;
			}
			int res = arr[front];
			if(front == rear) {
				front = rear = -1;
			}else {
			front = (front+1)%size;
			}
			return res;
			
		}
		public void display() {
			if(isEmpty()) {
				System.out.println("queue is emprty");
				return;
			}
			for(int i =front;i<=rear;i++) {
				System.out.println(arr[i]);
			}
		}
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Queue q = new Queue(5);
		   q.add(1);
	       q.add(2);
	       q.add(3);
	       q.add(4);
	       q.add(5);
	       System.out.println("removed elemnet"+q.remove());
	       q.add(6);
	       System.out.println("removed elemnet"+q.remove());
	       q.add(7);
	       
	       while(!q.isEmpty()) {
	    	   System.out.println(q.remove());
	       }
	      
	       

	}

}
